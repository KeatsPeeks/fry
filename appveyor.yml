environment:
  matrix:
    - job_name: Linux-Clang
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      CXX: clang++
      CC: clang
      APP_NAME: clang
      ENABLE_CLANG_TIDY: ON
    - job_name: Linux-GCC
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      CXX: g++
      CC: gcc
      APP_NAME: gcc
    - job_name: Windows-MSVC
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      APP_NAME: win
    - job_name: MacOS-Clang
      APPVEYOR_BUILD_WORKER_IMAGE: macOS
      APP_NAME: macos

version: '1.0.{build}'

clone_folder: /tmp/source

build_script:
  - sh: >-
      mkdir build

      cd build

      cmake /tmp/source -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo -DCI=${CI} -DBUILD_VERSION=${appveyor_build_version} -DENABLE_CLANG_TIDY=${ENABLE_CLANG_TIDY}

      cmake --build . --config "RelWithDebInfo"


artifacts:
  - path: build/output/*
    name: $(APP_NAME)

for:
  -
    matrix:
      only:
        - job_name: Linux-Clang

    install:
      - sh: sudo apt-get install -y clang-tidy-10

  -
    matrix:
      only:
        - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019

    clone_folder: c:\projects\source

    build_script:
      - cmd: >-
          mkdir build

          cd build

          cmake c:\projects\source -G "Visual Studio 16 2019" -DCI=$(CI) -DBUILD_VERSION=$(appveyor_build_version)

          cmake --build . --config "RelWithDebInfo"

          del output\RelWithDebInfo\*.ilk

    artifacts:
      - path: build\output\RelWithDebInfo\*.*
        name: windows_x64
